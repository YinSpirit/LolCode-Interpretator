
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDENTIFIERALL_OF AN ANY_OF BIGGR_OF BOTH_OF BOTH_SAEM DIFFRINT DIFF_OF EITHER_OF EOL GIMMEH HAI IDENTIFIER IS_NOW_A ITZ I_HAS_A KTHXBYE MKAY MOD_OF NOT NO_WAI NUMBAR NUMBR OIC O_RLY PRODUKT_OF QUOSHUNT_OF R SMALLR_OF SUM_OF TROOF TYPE VISIBLE WON_OF YARN YA_RLYprogram : HAI EOL statement_list KTHXBYE EOL\n               | HAI EOL statement_list KTHXBYEstatement_list : statement_list statement EOL\n                      | statement EOLstatement : statement : expressionstatement : VISIBLE expressionstatement : GIMMEH IDENTIFIERstatement : I_HAS_A IDENTIFIER ITZ expression\n                 | I_HAS_A IDENTIFIERstatement : IDENTIFIER R expressionstatement : IDENTIFIER IS_NOW_A TYPEstatement : O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC\n                 | O_RLY EOL YA_RLY EOL statement_list OICexpression_list : expression_list AN expression\n                       | expressionexpression : expression_unary_op\n                  | expression_logic_op\n                  | expression_binary_op\n                  | expression_inf_arity_opexpression_unary_op : NOT expressionexpression_logic_op : BOTH_OF expression AN expression\n                            | EITHER_OF expression AN expression\n                            | WON_OF expression AN expression\n                            | BOTH_SAEM expression AN expression\n                            | DIFFRINT expression AN expressionexpression_binary_op : SUM_OF expression AN expression\n                            | DIFF_OF expression AN expression\n                            | PRODUKT_OF expression AN expression\n                            | QUOSHUNT_OF expression AN expression\n                            | MOD_OF expression AN expression\n                            | BIGGR_OF expression AN expression\n                            | SMALLR_OF expression AN expressionexpression_inf_arity_op : ALL_OF expression_list MKAY\n                               | ANY_OF expression_list MKAYexpression : YARN\n                  | NUMBAR\n                  | NUMBR\n                  | TROOF\n                  | variablevariable : IDENTIFIER'
    
_lr_action_items = {'HAI':([0,],[2,]),'$end':([1,36,62,],[0,-2,-1,]),'EOL':([2,3,4,5,6,9,11,12,13,14,15,16,17,18,19,20,36,37,38,39,40,41,44,46,63,64,65,67,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,],[3,-5,-5,38,-6,-41,45,-17,-18,-19,-20,-36,-37,-38,-39,-40,62,63,-4,-7,-41,-8,-10,-21,-3,-11,-12,84,-34,-35,-9,-5,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-5,101,-14,-5,-5,-13,]),'VISIBLE':([3,4,38,63,84,98,101,102,],[7,7,-4,-3,7,7,7,7,]),'GIMMEH':([3,4,38,63,84,98,101,102,],[8,8,-4,-3,8,8,8,8,]),'I_HAS_A':([3,4,38,63,84,98,101,102,],[10,10,-4,-3,10,10,10,10,]),'IDENTIFIER':([3,4,7,8,10,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[9,9,40,41,44,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-4,40,-3,40,40,40,40,40,40,40,40,40,40,40,40,40,40,9,9,9,9,]),'O_RLY':([3,4,38,63,84,98,101,102,],[11,11,-4,-3,11,11,11,11,]),'YARN':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-4,16,-3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'NUMBAR':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-4,17,-3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'NUMBR':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-4,18,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'TROOF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-4,19,-3,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NOT':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-4,21,-3,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'BOTH_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-4,22,-3,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'EITHER_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-4,23,-3,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'WON_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-4,24,-3,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'BOTH_SAEM':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-4,25,-3,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'DIFFRINT':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-4,26,-3,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'SUM_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-4,27,-3,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'DIFF_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-4,28,-3,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'PRODUKT_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-4,29,-3,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'QUOSHUNT_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-4,30,-3,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'MOD_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-4,31,-3,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'BIGGR_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-4,32,-3,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'SMALLR_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-4,33,-3,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ALL_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-4,34,-3,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ANY_OF':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,42,63,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-4,35,-3,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'KTHXBYE':([4,38,63,],[36,-4,-3,]),'R':([9,],[42,]),'IS_NOW_A':([9,],[43,]),'AN':([12,13,14,15,16,17,18,19,20,40,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,80,82,85,86,87,88,89,90,91,92,93,94,95,96,97,],[-17,-18,-19,-20,-36,-37,-38,-39,-40,-41,-21,68,69,70,71,72,73,74,75,76,77,78,79,81,-16,81,-34,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-15,]),'MKAY':([12,13,14,15,16,17,18,19,20,40,46,59,60,61,80,82,85,86,87,88,89,90,91,92,93,94,95,96,97,],[-17,-18,-19,-20,-36,-37,-38,-39,-40,-41,-21,80,-16,82,-34,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-15,]),'NO_WAI':([38,63,98,],[-4,-3,99,]),'OIC':([38,63,98,102,],[-4,-3,100,103,]),'TYPE':([43,],[65,]),'ITZ':([44,],[66,]),'YA_RLY':([45,],[67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([3,84,101,],[4,98,102,]),'statement':([3,4,84,98,101,102,],[5,37,5,37,5,37,]),'expression':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,42,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[6,6,39,46,47,48,49,50,51,52,53,54,55,56,57,58,60,60,64,83,85,86,87,88,89,90,91,92,93,94,95,96,97,6,6,6,6,]),'expression_unary_op':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,42,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'expression_logic_op':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,42,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expression_binary_op':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,42,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'expression_inf_arity_op':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,42,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'variable':([3,4,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,42,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,98,101,102,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'expression_list':([34,35,],[59,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> HAI EOL statement_list KTHXBYE EOL','program',5,'p_start','Parser.py',11),
  ('program -> HAI EOL statement_list KTHXBYE','program',4,'p_start','Parser.py',12),
  ('statement_list -> statement_list statement EOL','statement_list',3,'p_statement_list','Parser.py',17),
  ('statement_list -> statement EOL','statement_list',2,'p_statement_list','Parser.py',18),
  ('statement -> <empty>','statement',0,'p_statement_empty','Parser.py',27),
  ('statement -> expression','statement',1,'p_statement','Parser.py',31),
  ('statement -> VISIBLE expression','statement',2,'p_statement_print','Parser.py',36),
  ('statement -> GIMMEH IDENTIFIER','statement',2,'p_statement_get','Parser.py',41),
  ('statement -> I_HAS_A IDENTIFIER ITZ expression','statement',4,'p_statement_define','Parser.py',46),
  ('statement -> I_HAS_A IDENTIFIER','statement',2,'p_statement_define','Parser.py',47),
  ('statement -> IDENTIFIER R expression','statement',3,'p_statement_assign','Parser.py',55),
  ('statement -> IDENTIFIER IS_NOW_A TYPE','statement',3,'p_statement_convert','Parser.py',59),
  ('statement -> O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC','statement',9,'p_statement_if','Parser.py',63),
  ('statement -> O_RLY EOL YA_RLY EOL statement_list OIC','statement',6,'p_statement_if','Parser.py',64),
  ('expression_list -> expression_list AN expression','expression_list',3,'p_expression_list','Parser.py',71),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parser.py',72),
  ('expression -> expression_unary_op','expression',1,'p_expression_operator','Parser.py',80),
  ('expression -> expression_logic_op','expression',1,'p_expression_operator','Parser.py',81),
  ('expression -> expression_binary_op','expression',1,'p_expression_operator','Parser.py',82),
  ('expression -> expression_inf_arity_op','expression',1,'p_expression_operator','Parser.py',83),
  ('expression_unary_op -> NOT expression','expression_unary_op',2,'p_expression_unary_op','Parser.py',88),
  ('expression_logic_op -> BOTH_OF expression AN expression','expression_logic_op',4,'p_expression_logic_op','Parser.py',92),
  ('expression_logic_op -> EITHER_OF expression AN expression','expression_logic_op',4,'p_expression_logic_op','Parser.py',93),
  ('expression_logic_op -> WON_OF expression AN expression','expression_logic_op',4,'p_expression_logic_op','Parser.py',94),
  ('expression_logic_op -> BOTH_SAEM expression AN expression','expression_logic_op',4,'p_expression_logic_op','Parser.py',95),
  ('expression_logic_op -> DIFFRINT expression AN expression','expression_logic_op',4,'p_expression_logic_op','Parser.py',96),
  ('expression_binary_op -> SUM_OF expression AN expression','expression_binary_op',4,'p_expression_binary_op','Parser.py',100),
  ('expression_binary_op -> DIFF_OF expression AN expression','expression_binary_op',4,'p_expression_binary_op','Parser.py',101),
  ('expression_binary_op -> PRODUKT_OF expression AN expression','expression_binary_op',4,'p_expression_binary_op','Parser.py',102),
  ('expression_binary_op -> QUOSHUNT_OF expression AN expression','expression_binary_op',4,'p_expression_binary_op','Parser.py',103),
  ('expression_binary_op -> MOD_OF expression AN expression','expression_binary_op',4,'p_expression_binary_op','Parser.py',104),
  ('expression_binary_op -> BIGGR_OF expression AN expression','expression_binary_op',4,'p_expression_binary_op','Parser.py',105),
  ('expression_binary_op -> SMALLR_OF expression AN expression','expression_binary_op',4,'p_expression_binary_op','Parser.py',106),
  ('expression_inf_arity_op -> ALL_OF expression_list MKAY','expression_inf_arity_op',3,'p_expression_inf_arity_op','Parser.py',111),
  ('expression_inf_arity_op -> ANY_OF expression_list MKAY','expression_inf_arity_op',3,'p_expression_inf_arity_op','Parser.py',112),
  ('expression -> YARN','expression',1,'p_expression_variable','Parser.py',116),
  ('expression -> NUMBAR','expression',1,'p_expression_variable','Parser.py',117),
  ('expression -> NUMBR','expression',1,'p_expression_variable','Parser.py',118),
  ('expression -> TROOF','expression',1,'p_expression_variable','Parser.py',119),
  ('expression -> variable','expression',1,'p_expression_variable','Parser.py',120),
  ('variable -> IDENTIFIER','variable',1,'p_variable','Parser.py',124),
]
