Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> HAI EOL statement_list KTHXBYE EOL
Rule 2     program -> HAI EOL statement_list KTHXBYE
Rule 3     statement_list -> statement_list statement EOL
Rule 4     statement_list -> statement EOL
Rule 5     statement -> <empty>
Rule 6     statement -> expression
Rule 7     statement -> VISIBLE expression
Rule 8     statement -> GIMMEH IDENTIFIER
Rule 9     statement -> I_HAS_A IDENTIFIER ITZ expression
Rule 10    statement -> I_HAS_A IDENTIFIER
Rule 11    statement -> IDENTIFIER R expression
Rule 12    statement -> IDENTIFIER IS_NOW_A TYPE
Rule 13    statement -> O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
Rule 14    statement -> O_RLY EOL YA_RLY EOL statement_list OIC
Rule 15    expression_list -> expression_list AN expression
Rule 16    expression_list -> expression
Rule 17    expression -> expression_unary_op
Rule 18    expression -> expression_logic_op
Rule 19    expression -> expression_binary_op
Rule 20    expression -> expression_inf_arity_op
Rule 21    expression_unary_op -> NOT expression
Rule 22    expression_logic_op -> BOTH_OF expression AN expression
Rule 23    expression_logic_op -> EITHER_OF expression AN expression
Rule 24    expression_logic_op -> WON_OF expression AN expression
Rule 25    expression_logic_op -> BOTH_SAEM expression AN expression
Rule 26    expression_logic_op -> DIFFRINT expression AN expression
Rule 27    expression_binary_op -> SUM_OF expression AN expression
Rule 28    expression_binary_op -> DIFF_OF expression AN expression
Rule 29    expression_binary_op -> PRODUKT_OF expression AN expression
Rule 30    expression_binary_op -> QUOSHUNT_OF expression AN expression
Rule 31    expression_binary_op -> MOD_OF expression AN expression
Rule 32    expression_binary_op -> BIGGR_OF expression AN expression
Rule 33    expression_binary_op -> SMALLR_OF expression AN expression
Rule 34    expression_inf_arity_op -> ALL_OF expression_list MKAY
Rule 35    expression_inf_arity_op -> ANY_OF expression_list MKAY
Rule 36    expression -> YARN
Rule 37    expression -> NUMBAR
Rule 38    expression -> NUMBR
Rule 39    expression -> TROOF
Rule 40    expression -> variable
Rule 41    variable -> IDENTIFIER

Terminals, with rules where they appear

ALL_OF               : 34
AN                   : 15 22 23 24 25 26 27 28 29 30 31 32 33
ANY_OF               : 35
BIGGR_OF             : 32
BOTH_OF              : 22
BOTH_SAEM            : 25
DIFFRINT             : 26
DIFF_OF              : 28
EITHER_OF            : 23
EOL                  : 1 1 2 3 4 13 13 13 14 14
GIMMEH               : 8
HAI                  : 1 2
IDENTIFIER           : 8 9 10 11 12 41
IS_NOW_A             : 12
ITZ                  : 9
I_HAS_A              : 9 10
KTHXBYE              : 1 2
MKAY                 : 34 35
MOD_OF               : 31
NOT                  : 21
NO_WAI               : 13
NUMBAR               : 37
NUMBR                : 38
OIC                  : 13 14
O_RLY                : 13 14
PRODUKT_OF           : 29
QUOSHUNT_OF          : 30
R                    : 11
SMALLR_OF            : 33
SUM_OF               : 27
TROOF                : 39
TYPE                 : 12
VISIBLE              : 7
WON_OF               : 24
YARN                 : 36
YA_RLY               : 13 14
error                : 

Nonterminals, with rules where they appear

expression           : 6 7 9 11 15 16 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33
expression_binary_op : 19
expression_inf_arity_op : 20
expression_list      : 15 34 35
expression_logic_op  : 18
expression_unary_op  : 17
program              : 0
statement            : 3 4
statement_list       : 1 2 3 13 13 14
variable             : 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . HAI EOL statement_list KTHXBYE EOL
    (2) program -> . HAI EOL statement_list KTHXBYE

    HAI             shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> HAI . EOL statement_list KTHXBYE EOL
    (2) program -> HAI . EOL statement_list KTHXBYE

    EOL             shift and go to state 3


state 3

    (1) program -> HAI EOL . statement_list KTHXBYE EOL
    (2) program -> HAI EOL . statement_list KTHXBYE
    (3) statement_list -> . statement_list statement EOL
    (4) statement_list -> . statement EOL
    (5) statement -> .
    (6) statement -> . expression
    (7) statement -> . VISIBLE expression
    (8) statement -> . GIMMEH IDENTIFIER
    (9) statement -> . I_HAS_A IDENTIFIER ITZ expression
    (10) statement -> . I_HAS_A IDENTIFIER
    (11) statement -> . IDENTIFIER R expression
    (12) statement -> . IDENTIFIER IS_NOW_A TYPE
    (13) statement -> . O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> . O_RLY EOL YA_RLY EOL statement_list OIC
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    EOL             reduce using rule 5 (statement -> .)
    VISIBLE         shift and go to state 7
    GIMMEH          shift and go to state 8
    I_HAS_A         shift and go to state 10
    IDENTIFIER      shift and go to state 9
    O_RLY           shift and go to state 11
    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35

    statement_list                 shift and go to state 4
    statement                      shift and go to state 5
    expression                     shift and go to state 6
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 4

    (1) program -> HAI EOL statement_list . KTHXBYE EOL
    (2) program -> HAI EOL statement_list . KTHXBYE
    (3) statement_list -> statement_list . statement EOL
    (5) statement -> .
    (6) statement -> . expression
    (7) statement -> . VISIBLE expression
    (8) statement -> . GIMMEH IDENTIFIER
    (9) statement -> . I_HAS_A IDENTIFIER ITZ expression
    (10) statement -> . I_HAS_A IDENTIFIER
    (11) statement -> . IDENTIFIER R expression
    (12) statement -> . IDENTIFIER IS_NOW_A TYPE
    (13) statement -> . O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> . O_RLY EOL YA_RLY EOL statement_list OIC
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    KTHXBYE         shift and go to state 36
    EOL             reduce using rule 5 (statement -> .)
    VISIBLE         shift and go to state 7
    GIMMEH          shift and go to state 8
    I_HAS_A         shift and go to state 10
    IDENTIFIER      shift and go to state 9
    O_RLY           shift and go to state 11
    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35

    statement                      shift and go to state 37
    expression                     shift and go to state 6
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 5

    (4) statement_list -> statement . EOL

    EOL             shift and go to state 38


state 6

    (6) statement -> expression .

    EOL             reduce using rule 6 (statement -> expression .)


state 7

    (7) statement -> VISIBLE . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 39
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 8

    (8) statement -> GIMMEH . IDENTIFIER

    IDENTIFIER      shift and go to state 41


state 9

    (11) statement -> IDENTIFIER . R expression
    (12) statement -> IDENTIFIER . IS_NOW_A TYPE
    (41) variable -> IDENTIFIER .

    R               shift and go to state 42
    IS_NOW_A        shift and go to state 43
    EOL             reduce using rule 41 (variable -> IDENTIFIER .)


state 10

    (9) statement -> I_HAS_A . IDENTIFIER ITZ expression
    (10) statement -> I_HAS_A . IDENTIFIER

    IDENTIFIER      shift and go to state 44


state 11

    (13) statement -> O_RLY . EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> O_RLY . EOL YA_RLY EOL statement_list OIC

    EOL             shift and go to state 45


state 12

    (17) expression -> expression_unary_op .

    EOL             reduce using rule 17 (expression -> expression_unary_op .)
    AN              reduce using rule 17 (expression -> expression_unary_op .)
    MKAY            reduce using rule 17 (expression -> expression_unary_op .)


state 13

    (18) expression -> expression_logic_op .

    EOL             reduce using rule 18 (expression -> expression_logic_op .)
    AN              reduce using rule 18 (expression -> expression_logic_op .)
    MKAY            reduce using rule 18 (expression -> expression_logic_op .)


state 14

    (19) expression -> expression_binary_op .

    EOL             reduce using rule 19 (expression -> expression_binary_op .)
    AN              reduce using rule 19 (expression -> expression_binary_op .)
    MKAY            reduce using rule 19 (expression -> expression_binary_op .)


state 15

    (20) expression -> expression_inf_arity_op .

    EOL             reduce using rule 20 (expression -> expression_inf_arity_op .)
    AN              reduce using rule 20 (expression -> expression_inf_arity_op .)
    MKAY            reduce using rule 20 (expression -> expression_inf_arity_op .)


state 16

    (36) expression -> YARN .

    EOL             reduce using rule 36 (expression -> YARN .)
    AN              reduce using rule 36 (expression -> YARN .)
    MKAY            reduce using rule 36 (expression -> YARN .)


state 17

    (37) expression -> NUMBAR .

    EOL             reduce using rule 37 (expression -> NUMBAR .)
    AN              reduce using rule 37 (expression -> NUMBAR .)
    MKAY            reduce using rule 37 (expression -> NUMBAR .)


state 18

    (38) expression -> NUMBR .

    EOL             reduce using rule 38 (expression -> NUMBR .)
    AN              reduce using rule 38 (expression -> NUMBR .)
    MKAY            reduce using rule 38 (expression -> NUMBR .)


state 19

    (39) expression -> TROOF .

    EOL             reduce using rule 39 (expression -> TROOF .)
    AN              reduce using rule 39 (expression -> TROOF .)
    MKAY            reduce using rule 39 (expression -> TROOF .)


state 20

    (40) expression -> variable .

    EOL             reduce using rule 40 (expression -> variable .)
    AN              reduce using rule 40 (expression -> variable .)
    MKAY            reduce using rule 40 (expression -> variable .)


state 21

    (21) expression_unary_op -> NOT . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 46
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 22

    (22) expression_logic_op -> BOTH_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 47
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 23

    (23) expression_logic_op -> EITHER_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 48
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 24

    (24) expression_logic_op -> WON_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 49
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 25

    (25) expression_logic_op -> BOTH_SAEM . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 50
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 26

    (26) expression_logic_op -> DIFFRINT . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 51
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 27

    (27) expression_binary_op -> SUM_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 52
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 28

    (28) expression_binary_op -> DIFF_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 53
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 29

    (29) expression_binary_op -> PRODUKT_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 54
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 30

    (30) expression_binary_op -> QUOSHUNT_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 55
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 31

    (31) expression_binary_op -> MOD_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 56
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 32

    (32) expression_binary_op -> BIGGR_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 57
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 33

    (33) expression_binary_op -> SMALLR_OF . expression AN expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 58
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 34

    (34) expression_inf_arity_op -> ALL_OF . expression_list MKAY
    (15) expression_list -> . expression_list AN expression
    (16) expression_list -> . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression_list                shift and go to state 59
    expression                     shift and go to state 60
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 35

    (35) expression_inf_arity_op -> ANY_OF . expression_list MKAY
    (15) expression_list -> . expression_list AN expression
    (16) expression_list -> . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression_list                shift and go to state 61
    expression                     shift and go to state 60
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 36

    (1) program -> HAI EOL statement_list KTHXBYE . EOL
    (2) program -> HAI EOL statement_list KTHXBYE .

    EOL             shift and go to state 62
    $end            reduce using rule 2 (program -> HAI EOL statement_list KTHXBYE .)


state 37

    (3) statement_list -> statement_list statement . EOL

    EOL             shift and go to state 63


state 38

    (4) statement_list -> statement EOL .

    KTHXBYE         reduce using rule 4 (statement_list -> statement EOL .)
    VISIBLE         reduce using rule 4 (statement_list -> statement EOL .)
    GIMMEH          reduce using rule 4 (statement_list -> statement EOL .)
    I_HAS_A         reduce using rule 4 (statement_list -> statement EOL .)
    IDENTIFIER      reduce using rule 4 (statement_list -> statement EOL .)
    O_RLY           reduce using rule 4 (statement_list -> statement EOL .)
    YARN            reduce using rule 4 (statement_list -> statement EOL .)
    NUMBAR          reduce using rule 4 (statement_list -> statement EOL .)
    NUMBR           reduce using rule 4 (statement_list -> statement EOL .)
    TROOF           reduce using rule 4 (statement_list -> statement EOL .)
    NOT             reduce using rule 4 (statement_list -> statement EOL .)
    BOTH_OF         reduce using rule 4 (statement_list -> statement EOL .)
    EITHER_OF       reduce using rule 4 (statement_list -> statement EOL .)
    WON_OF          reduce using rule 4 (statement_list -> statement EOL .)
    BOTH_SAEM       reduce using rule 4 (statement_list -> statement EOL .)
    DIFFRINT        reduce using rule 4 (statement_list -> statement EOL .)
    SUM_OF          reduce using rule 4 (statement_list -> statement EOL .)
    DIFF_OF         reduce using rule 4 (statement_list -> statement EOL .)
    PRODUKT_OF      reduce using rule 4 (statement_list -> statement EOL .)
    QUOSHUNT_OF     reduce using rule 4 (statement_list -> statement EOL .)
    MOD_OF          reduce using rule 4 (statement_list -> statement EOL .)
    BIGGR_OF        reduce using rule 4 (statement_list -> statement EOL .)
    SMALLR_OF       reduce using rule 4 (statement_list -> statement EOL .)
    ALL_OF          reduce using rule 4 (statement_list -> statement EOL .)
    ANY_OF          reduce using rule 4 (statement_list -> statement EOL .)
    EOL             reduce using rule 4 (statement_list -> statement EOL .)
    NO_WAI          reduce using rule 4 (statement_list -> statement EOL .)
    OIC             reduce using rule 4 (statement_list -> statement EOL .)


state 39

    (7) statement -> VISIBLE expression .

    EOL             reduce using rule 7 (statement -> VISIBLE expression .)


state 40

    (41) variable -> IDENTIFIER .

    EOL             reduce using rule 41 (variable -> IDENTIFIER .)
    AN              reduce using rule 41 (variable -> IDENTIFIER .)
    MKAY            reduce using rule 41 (variable -> IDENTIFIER .)


state 41

    (8) statement -> GIMMEH IDENTIFIER .

    EOL             reduce using rule 8 (statement -> GIMMEH IDENTIFIER .)


state 42

    (11) statement -> IDENTIFIER R . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 64
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 43

    (12) statement -> IDENTIFIER IS_NOW_A . TYPE

    TYPE            shift and go to state 65


state 44

    (9) statement -> I_HAS_A IDENTIFIER . ITZ expression
    (10) statement -> I_HAS_A IDENTIFIER .

    ITZ             shift and go to state 66
    EOL             reduce using rule 10 (statement -> I_HAS_A IDENTIFIER .)


state 45

    (13) statement -> O_RLY EOL . YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> O_RLY EOL . YA_RLY EOL statement_list OIC

    YA_RLY          shift and go to state 67


state 46

    (21) expression_unary_op -> NOT expression .

    EOL             reduce using rule 21 (expression_unary_op -> NOT expression .)
    AN              reduce using rule 21 (expression_unary_op -> NOT expression .)
    MKAY            reduce using rule 21 (expression_unary_op -> NOT expression .)


state 47

    (22) expression_logic_op -> BOTH_OF expression . AN expression

    AN              shift and go to state 68


state 48

    (23) expression_logic_op -> EITHER_OF expression . AN expression

    AN              shift and go to state 69


state 49

    (24) expression_logic_op -> WON_OF expression . AN expression

    AN              shift and go to state 70


state 50

    (25) expression_logic_op -> BOTH_SAEM expression . AN expression

    AN              shift and go to state 71


state 51

    (26) expression_logic_op -> DIFFRINT expression . AN expression

    AN              shift and go to state 72


state 52

    (27) expression_binary_op -> SUM_OF expression . AN expression

    AN              shift and go to state 73


state 53

    (28) expression_binary_op -> DIFF_OF expression . AN expression

    AN              shift and go to state 74


state 54

    (29) expression_binary_op -> PRODUKT_OF expression . AN expression

    AN              shift and go to state 75


state 55

    (30) expression_binary_op -> QUOSHUNT_OF expression . AN expression

    AN              shift and go to state 76


state 56

    (31) expression_binary_op -> MOD_OF expression . AN expression

    AN              shift and go to state 77


state 57

    (32) expression_binary_op -> BIGGR_OF expression . AN expression

    AN              shift and go to state 78


state 58

    (33) expression_binary_op -> SMALLR_OF expression . AN expression

    AN              shift and go to state 79


state 59

    (34) expression_inf_arity_op -> ALL_OF expression_list . MKAY
    (15) expression_list -> expression_list . AN expression

    MKAY            shift and go to state 80
    AN              shift and go to state 81


state 60

    (16) expression_list -> expression .

    MKAY            reduce using rule 16 (expression_list -> expression .)
    AN              reduce using rule 16 (expression_list -> expression .)


state 61

    (35) expression_inf_arity_op -> ANY_OF expression_list . MKAY
    (15) expression_list -> expression_list . AN expression

    MKAY            shift and go to state 82
    AN              shift and go to state 81


state 62

    (1) program -> HAI EOL statement_list KTHXBYE EOL .

    $end            reduce using rule 1 (program -> HAI EOL statement_list KTHXBYE EOL .)


state 63

    (3) statement_list -> statement_list statement EOL .

    KTHXBYE         reduce using rule 3 (statement_list -> statement_list statement EOL .)
    VISIBLE         reduce using rule 3 (statement_list -> statement_list statement EOL .)
    GIMMEH          reduce using rule 3 (statement_list -> statement_list statement EOL .)
    I_HAS_A         reduce using rule 3 (statement_list -> statement_list statement EOL .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement_list statement EOL .)
    O_RLY           reduce using rule 3 (statement_list -> statement_list statement EOL .)
    YARN            reduce using rule 3 (statement_list -> statement_list statement EOL .)
    NUMBAR          reduce using rule 3 (statement_list -> statement_list statement EOL .)
    NUMBR           reduce using rule 3 (statement_list -> statement_list statement EOL .)
    TROOF           reduce using rule 3 (statement_list -> statement_list statement EOL .)
    NOT             reduce using rule 3 (statement_list -> statement_list statement EOL .)
    BOTH_OF         reduce using rule 3 (statement_list -> statement_list statement EOL .)
    EITHER_OF       reduce using rule 3 (statement_list -> statement_list statement EOL .)
    WON_OF          reduce using rule 3 (statement_list -> statement_list statement EOL .)
    BOTH_SAEM       reduce using rule 3 (statement_list -> statement_list statement EOL .)
    DIFFRINT        reduce using rule 3 (statement_list -> statement_list statement EOL .)
    SUM_OF          reduce using rule 3 (statement_list -> statement_list statement EOL .)
    DIFF_OF         reduce using rule 3 (statement_list -> statement_list statement EOL .)
    PRODUKT_OF      reduce using rule 3 (statement_list -> statement_list statement EOL .)
    QUOSHUNT_OF     reduce using rule 3 (statement_list -> statement_list statement EOL .)
    MOD_OF          reduce using rule 3 (statement_list -> statement_list statement EOL .)
    BIGGR_OF        reduce using rule 3 (statement_list -> statement_list statement EOL .)
    SMALLR_OF       reduce using rule 3 (statement_list -> statement_list statement EOL .)
    ALL_OF          reduce using rule 3 (statement_list -> statement_list statement EOL .)
    ANY_OF          reduce using rule 3 (statement_list -> statement_list statement EOL .)
    EOL             reduce using rule 3 (statement_list -> statement_list statement EOL .)
    NO_WAI          reduce using rule 3 (statement_list -> statement_list statement EOL .)
    OIC             reduce using rule 3 (statement_list -> statement_list statement EOL .)


state 64

    (11) statement -> IDENTIFIER R expression .

    EOL             reduce using rule 11 (statement -> IDENTIFIER R expression .)


state 65

    (12) statement -> IDENTIFIER IS_NOW_A TYPE .

    EOL             reduce using rule 12 (statement -> IDENTIFIER IS_NOW_A TYPE .)


state 66

    (9) statement -> I_HAS_A IDENTIFIER ITZ . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 83
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 67

    (13) statement -> O_RLY EOL YA_RLY . EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> O_RLY EOL YA_RLY . EOL statement_list OIC

    EOL             shift and go to state 84


state 68

    (22) expression_logic_op -> BOTH_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 85
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 69

    (23) expression_logic_op -> EITHER_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 86
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 70

    (24) expression_logic_op -> WON_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 87
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 71

    (25) expression_logic_op -> BOTH_SAEM expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 88
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 72

    (26) expression_logic_op -> DIFFRINT expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 89
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 73

    (27) expression_binary_op -> SUM_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 90
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 74

    (28) expression_binary_op -> DIFF_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 91
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 75

    (29) expression_binary_op -> PRODUKT_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 92
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 76

    (30) expression_binary_op -> QUOSHUNT_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 93
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 77

    (31) expression_binary_op -> MOD_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 94
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 78

    (32) expression_binary_op -> BIGGR_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 95
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 79

    (33) expression_binary_op -> SMALLR_OF expression AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 96
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 80

    (34) expression_inf_arity_op -> ALL_OF expression_list MKAY .

    EOL             reduce using rule 34 (expression_inf_arity_op -> ALL_OF expression_list MKAY .)
    AN              reduce using rule 34 (expression_inf_arity_op -> ALL_OF expression_list MKAY .)
    MKAY            reduce using rule 34 (expression_inf_arity_op -> ALL_OF expression_list MKAY .)


state 81

    (15) expression_list -> expression_list AN . expression
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35
    IDENTIFIER      shift and go to state 40

    expression                     shift and go to state 97
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 82

    (35) expression_inf_arity_op -> ANY_OF expression_list MKAY .

    EOL             reduce using rule 35 (expression_inf_arity_op -> ANY_OF expression_list MKAY .)
    AN              reduce using rule 35 (expression_inf_arity_op -> ANY_OF expression_list MKAY .)
    MKAY            reduce using rule 35 (expression_inf_arity_op -> ANY_OF expression_list MKAY .)


state 83

    (9) statement -> I_HAS_A IDENTIFIER ITZ expression .

    EOL             reduce using rule 9 (statement -> I_HAS_A IDENTIFIER ITZ expression .)


state 84

    (13) statement -> O_RLY EOL YA_RLY EOL . statement_list NO_WAI EOL statement_list OIC
    (14) statement -> O_RLY EOL YA_RLY EOL . statement_list OIC
    (3) statement_list -> . statement_list statement EOL
    (4) statement_list -> . statement EOL
    (5) statement -> .
    (6) statement -> . expression
    (7) statement -> . VISIBLE expression
    (8) statement -> . GIMMEH IDENTIFIER
    (9) statement -> . I_HAS_A IDENTIFIER ITZ expression
    (10) statement -> . I_HAS_A IDENTIFIER
    (11) statement -> . IDENTIFIER R expression
    (12) statement -> . IDENTIFIER IS_NOW_A TYPE
    (13) statement -> . O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> . O_RLY EOL YA_RLY EOL statement_list OIC
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    EOL             reduce using rule 5 (statement -> .)
    VISIBLE         shift and go to state 7
    GIMMEH          shift and go to state 8
    I_HAS_A         shift and go to state 10
    IDENTIFIER      shift and go to state 9
    O_RLY           shift and go to state 11
    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35

    statement_list                 shift and go to state 98
    statement                      shift and go to state 5
    expression                     shift and go to state 6
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 85

    (22) expression_logic_op -> BOTH_OF expression AN expression .

    EOL             reduce using rule 22 (expression_logic_op -> BOTH_OF expression AN expression .)
    AN              reduce using rule 22 (expression_logic_op -> BOTH_OF expression AN expression .)
    MKAY            reduce using rule 22 (expression_logic_op -> BOTH_OF expression AN expression .)


state 86

    (23) expression_logic_op -> EITHER_OF expression AN expression .

    EOL             reduce using rule 23 (expression_logic_op -> EITHER_OF expression AN expression .)
    AN              reduce using rule 23 (expression_logic_op -> EITHER_OF expression AN expression .)
    MKAY            reduce using rule 23 (expression_logic_op -> EITHER_OF expression AN expression .)


state 87

    (24) expression_logic_op -> WON_OF expression AN expression .

    EOL             reduce using rule 24 (expression_logic_op -> WON_OF expression AN expression .)
    AN              reduce using rule 24 (expression_logic_op -> WON_OF expression AN expression .)
    MKAY            reduce using rule 24 (expression_logic_op -> WON_OF expression AN expression .)


state 88

    (25) expression_logic_op -> BOTH_SAEM expression AN expression .

    EOL             reduce using rule 25 (expression_logic_op -> BOTH_SAEM expression AN expression .)
    AN              reduce using rule 25 (expression_logic_op -> BOTH_SAEM expression AN expression .)
    MKAY            reduce using rule 25 (expression_logic_op -> BOTH_SAEM expression AN expression .)


state 89

    (26) expression_logic_op -> DIFFRINT expression AN expression .

    EOL             reduce using rule 26 (expression_logic_op -> DIFFRINT expression AN expression .)
    AN              reduce using rule 26 (expression_logic_op -> DIFFRINT expression AN expression .)
    MKAY            reduce using rule 26 (expression_logic_op -> DIFFRINT expression AN expression .)


state 90

    (27) expression_binary_op -> SUM_OF expression AN expression .

    EOL             reduce using rule 27 (expression_binary_op -> SUM_OF expression AN expression .)
    AN              reduce using rule 27 (expression_binary_op -> SUM_OF expression AN expression .)
    MKAY            reduce using rule 27 (expression_binary_op -> SUM_OF expression AN expression .)


state 91

    (28) expression_binary_op -> DIFF_OF expression AN expression .

    EOL             reduce using rule 28 (expression_binary_op -> DIFF_OF expression AN expression .)
    AN              reduce using rule 28 (expression_binary_op -> DIFF_OF expression AN expression .)
    MKAY            reduce using rule 28 (expression_binary_op -> DIFF_OF expression AN expression .)


state 92

    (29) expression_binary_op -> PRODUKT_OF expression AN expression .

    EOL             reduce using rule 29 (expression_binary_op -> PRODUKT_OF expression AN expression .)
    AN              reduce using rule 29 (expression_binary_op -> PRODUKT_OF expression AN expression .)
    MKAY            reduce using rule 29 (expression_binary_op -> PRODUKT_OF expression AN expression .)


state 93

    (30) expression_binary_op -> QUOSHUNT_OF expression AN expression .

    EOL             reduce using rule 30 (expression_binary_op -> QUOSHUNT_OF expression AN expression .)
    AN              reduce using rule 30 (expression_binary_op -> QUOSHUNT_OF expression AN expression .)
    MKAY            reduce using rule 30 (expression_binary_op -> QUOSHUNT_OF expression AN expression .)


state 94

    (31) expression_binary_op -> MOD_OF expression AN expression .

    EOL             reduce using rule 31 (expression_binary_op -> MOD_OF expression AN expression .)
    AN              reduce using rule 31 (expression_binary_op -> MOD_OF expression AN expression .)
    MKAY            reduce using rule 31 (expression_binary_op -> MOD_OF expression AN expression .)


state 95

    (32) expression_binary_op -> BIGGR_OF expression AN expression .

    EOL             reduce using rule 32 (expression_binary_op -> BIGGR_OF expression AN expression .)
    AN              reduce using rule 32 (expression_binary_op -> BIGGR_OF expression AN expression .)
    MKAY            reduce using rule 32 (expression_binary_op -> BIGGR_OF expression AN expression .)


state 96

    (33) expression_binary_op -> SMALLR_OF expression AN expression .

    EOL             reduce using rule 33 (expression_binary_op -> SMALLR_OF expression AN expression .)
    AN              reduce using rule 33 (expression_binary_op -> SMALLR_OF expression AN expression .)
    MKAY            reduce using rule 33 (expression_binary_op -> SMALLR_OF expression AN expression .)


state 97

    (15) expression_list -> expression_list AN expression .

    MKAY            reduce using rule 15 (expression_list -> expression_list AN expression .)
    AN              reduce using rule 15 (expression_list -> expression_list AN expression .)


state 98

    (13) statement -> O_RLY EOL YA_RLY EOL statement_list . NO_WAI EOL statement_list OIC
    (14) statement -> O_RLY EOL YA_RLY EOL statement_list . OIC
    (3) statement_list -> statement_list . statement EOL
    (5) statement -> .
    (6) statement -> . expression
    (7) statement -> . VISIBLE expression
    (8) statement -> . GIMMEH IDENTIFIER
    (9) statement -> . I_HAS_A IDENTIFIER ITZ expression
    (10) statement -> . I_HAS_A IDENTIFIER
    (11) statement -> . IDENTIFIER R expression
    (12) statement -> . IDENTIFIER IS_NOW_A TYPE
    (13) statement -> . O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> . O_RLY EOL YA_RLY EOL statement_list OIC
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    NO_WAI          shift and go to state 99
    OIC             shift and go to state 100
    EOL             reduce using rule 5 (statement -> .)
    VISIBLE         shift and go to state 7
    GIMMEH          shift and go to state 8
    I_HAS_A         shift and go to state 10
    IDENTIFIER      shift and go to state 9
    O_RLY           shift and go to state 11
    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35

    statement                      shift and go to state 37
    expression                     shift and go to state 6
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 99

    (13) statement -> O_RLY EOL YA_RLY EOL statement_list NO_WAI . EOL statement_list OIC

    EOL             shift and go to state 101


state 100

    (14) statement -> O_RLY EOL YA_RLY EOL statement_list OIC .

    EOL             reduce using rule 14 (statement -> O_RLY EOL YA_RLY EOL statement_list OIC .)


state 101

    (13) statement -> O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL . statement_list OIC
    (3) statement_list -> . statement_list statement EOL
    (4) statement_list -> . statement EOL
    (5) statement -> .
    (6) statement -> . expression
    (7) statement -> . VISIBLE expression
    (8) statement -> . GIMMEH IDENTIFIER
    (9) statement -> . I_HAS_A IDENTIFIER ITZ expression
    (10) statement -> . I_HAS_A IDENTIFIER
    (11) statement -> . IDENTIFIER R expression
    (12) statement -> . IDENTIFIER IS_NOW_A TYPE
    (13) statement -> . O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> . O_RLY EOL YA_RLY EOL statement_list OIC
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    EOL             reduce using rule 5 (statement -> .)
    VISIBLE         shift and go to state 7
    GIMMEH          shift and go to state 8
    I_HAS_A         shift and go to state 10
    IDENTIFIER      shift and go to state 9
    O_RLY           shift and go to state 11
    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35

    statement_list                 shift and go to state 102
    statement                      shift and go to state 5
    expression                     shift and go to state 6
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 102

    (13) statement -> O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list . OIC
    (3) statement_list -> statement_list . statement EOL
    (5) statement -> .
    (6) statement -> . expression
    (7) statement -> . VISIBLE expression
    (8) statement -> . GIMMEH IDENTIFIER
    (9) statement -> . I_HAS_A IDENTIFIER ITZ expression
    (10) statement -> . I_HAS_A IDENTIFIER
    (11) statement -> . IDENTIFIER R expression
    (12) statement -> . IDENTIFIER IS_NOW_A TYPE
    (13) statement -> . O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC
    (14) statement -> . O_RLY EOL YA_RLY EOL statement_list OIC
    (17) expression -> . expression_unary_op
    (18) expression -> . expression_logic_op
    (19) expression -> . expression_binary_op
    (20) expression -> . expression_inf_arity_op
    (36) expression -> . YARN
    (37) expression -> . NUMBAR
    (38) expression -> . NUMBR
    (39) expression -> . TROOF
    (40) expression -> . variable
    (21) expression_unary_op -> . NOT expression
    (22) expression_logic_op -> . BOTH_OF expression AN expression
    (23) expression_logic_op -> . EITHER_OF expression AN expression
    (24) expression_logic_op -> . WON_OF expression AN expression
    (25) expression_logic_op -> . BOTH_SAEM expression AN expression
    (26) expression_logic_op -> . DIFFRINT expression AN expression
    (27) expression_binary_op -> . SUM_OF expression AN expression
    (28) expression_binary_op -> . DIFF_OF expression AN expression
    (29) expression_binary_op -> . PRODUKT_OF expression AN expression
    (30) expression_binary_op -> . QUOSHUNT_OF expression AN expression
    (31) expression_binary_op -> . MOD_OF expression AN expression
    (32) expression_binary_op -> . BIGGR_OF expression AN expression
    (33) expression_binary_op -> . SMALLR_OF expression AN expression
    (34) expression_inf_arity_op -> . ALL_OF expression_list MKAY
    (35) expression_inf_arity_op -> . ANY_OF expression_list MKAY
    (41) variable -> . IDENTIFIER

    OIC             shift and go to state 103
    EOL             reduce using rule 5 (statement -> .)
    VISIBLE         shift and go to state 7
    GIMMEH          shift and go to state 8
    I_HAS_A         shift and go to state 10
    IDENTIFIER      shift and go to state 9
    O_RLY           shift and go to state 11
    YARN            shift and go to state 16
    NUMBAR          shift and go to state 17
    NUMBR           shift and go to state 18
    TROOF           shift and go to state 19
    NOT             shift and go to state 21
    BOTH_OF         shift and go to state 22
    EITHER_OF       shift and go to state 23
    WON_OF          shift and go to state 24
    BOTH_SAEM       shift and go to state 25
    DIFFRINT        shift and go to state 26
    SUM_OF          shift and go to state 27
    DIFF_OF         shift and go to state 28
    PRODUKT_OF      shift and go to state 29
    QUOSHUNT_OF     shift and go to state 30
    MOD_OF          shift and go to state 31
    BIGGR_OF        shift and go to state 32
    SMALLR_OF       shift and go to state 33
    ALL_OF          shift and go to state 34
    ANY_OF          shift and go to state 35

    statement                      shift and go to state 37
    expression                     shift and go to state 6
    expression_unary_op            shift and go to state 12
    expression_logic_op            shift and go to state 13
    expression_binary_op           shift and go to state 14
    expression_inf_arity_op        shift and go to state 15
    variable                       shift and go to state 20

state 103

    (13) statement -> O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC .

    EOL             reduce using rule 13 (statement -> O_RLY EOL YA_RLY EOL statement_list NO_WAI EOL statement_list OIC .)

